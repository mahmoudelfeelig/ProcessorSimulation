; === Register Initialization ===
MOVI R1 R0 5
MOVI R2 R0 10
MOVI R3 R0 15
MOVI R4 R0 -5
MOVI R5 R0 0
MOVI R6 R0 -1
MOVI R7 R0 1
MOVI R8 R0 3
MOVI R9 R0 2
MOVI R10 R0 123

; === R-Type Arithmetic ===
ADD R11 R1 R2
SUB R12 R3 R1
MUL R13 R2 R4
AND R14 R1 R6
ADD R15 R5 R7
SUB R16 R6 R7
MUL R17 R7 R8
AND R18 R6 R6

; === XORI (Immediate logic) ===
XORI R19 R1 0
XORI R20 R1 255
XORI R21 R4 -1
XORI R22 R3 1234

; === Shift Ops (LSL/LSR) ===
LSL R23 R1 1
LSL R24 R2 2
LSL R25 R3 3
LSR R26 R3 1
LSR R27 R2 2
LSR R28 R1 3

; === MOVM/MOVR (Memory) ===
MOVM R1 R0 100
MOVM R2 R0 101
MOVM R3 R0 102
MOVR R29 R0 100
MOVR R30 R0 101
MOVR R31 R0 102

; === JEQ True/False ===
JEQ R1 R1 2       ; should jump over next MOVI
MOVI R15 R0 777   ; should be skipped
MOVI R16 R0 888   ; should be run
JEQ R1 R2 1       ; should NOT jump
MOVI R17 R0 999

; === JMP Absolute ===
JMP 50
MOVI R18 R0 555   ; skipped by jump

; === Fill until 50 (padding) ===
MOVI R19 R0 19
MOVI R20 R0 20
MOVI R21 R0 21
MOVI R22 R0 22
MOVI R23 R0 23
MOVI R24 R0 24
MOVI R25 R0 25
MOVI R26 R0 26
MOVI R27 R0 27
MOVI R28 R0 28
MOVI R29 R0 29
MOVI R30 R0 30
MOVI R31 R0 31
MOVI R11 R0 11
MOVI R12 R0 12
MOVI R13 R0 13
MOVI R14 R0 14
MOVI R15 R0 15
MOVI R16 R0 16
MOVI R17 R0 17

; === More JEQ Tests (negative imm) ===
JEQ R1 R1 -1      ; jump backwards 1
MOVI R18 R0 123   ; should be skipped due to backward branch

; === Memory stress test ===
MOVI R1 R0 222
MOVI R2 R0 10
MOVM R1 R0 110
MOVM R2 R0 111
MOVR R3 R0 110
MOVR R4 R0 111

; === Nested Branch & Flush Scenario ===
MOVI R5 R0 5
MOVI R6 R0 5
JEQ R5 R6 2
MOVI R7 R0 999
MOVI R8 R0 888
JMP 95
MOVI R9 R0 777
MOVI R10 R0 666

; === Fillers until 95 ===
MOVI R11 R0 201
MOVI R12 R0 202
MOVI R13 R0 203
MOVI R14 R0 204
MOVI R15 R0 205
MOVI R16 R0 206
MOVI R17 R0 207
MOVI R18 R0 208
MOVI R19 R0 209
MOVI R20 R0 210
MOVI R21 R0 211
MOVI R22 R0 212
MOVI R23 R0 213
MOVI R24 R0 214
MOVI R25 R0 215

; === Final Memory and Zero Register Check ===
MOVM R1 R0 200
MOVR R31 R0 200   ; write to R31
MOVR R0 R0 200    ; should NOT affect R0

; === R0 Lock Test (should stay 0) ===
ADD R0 R1 R2
MOVI R0 R0 123
MOVM R0 R0 130
MOVR R0 R0 130
